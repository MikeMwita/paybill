openapi: 3.0.0
info:
  title: PayBill API
  description: PayBill's Authentication API for seamless integration
  version: 1.0.0

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      description: Endpoint to register a new user in the PayBill system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Invalid request payload
        '409':
          description: User with the provided email already exists

  /api/auth/login:
    post:
      summary: User login
      description: Endpoint for user authentication and login.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User successfully logged in
        '401':
          description: Invalid credentials
        '404':
          description: User not found

  /api/auth/logout:
    post:
      summary: User logout
      description: Endpoint to log out the currently authenticated user.
      responses:
        '200':
          description: User successfully logged out
        '401':
          description: Unauthorized

  /api/auth/refresh:
    post:
      summary: Refresh authentication token
      description: Endpoint to refresh the authentication token.
      responses:
        '200':
          description: Token successfully refreshed
        '401':
          description: Unauthorized

  /api/auth/reset:
    post:
      summary: Initiate password reset
      description: Endpoint to initiate the password reset process.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '200':
          description: Password reset initiated
        '404':
          description: User not found

  /api/auth/reset/{token}:
    put:
      summary: Reset password
      description: Endpoint to reset the user password using the provided token.
      parameters:
        - name: token
          in: path
          required: true
          description: The token received for password reset
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '200':
          description: Password successfully reset
        '401':
          description: Unauthorized

  /api/auth/verify:
    post:
      summary: Verify user
      description: Endpoint to verify the user's identity.
      responses:
        '200':
          description: User successfully verified
        '401':
          description: Unauthorized

  /api/auth/verify/{token}:
    get:
      summary: Verify email
      description: Endpoint to verify the user's email using the provided token.
      parameters:
        - name: token
          in: path
          required: true
          description: The token received for email verification
          schema:
            type: string
      responses:
        '200':
          description: Email successfully verified
        '401':
          description: Unauthorized

  /api/auth/profile:
    get:
      summary: Get user profile
      description: Endpoint to retrieve the user's profile information.
      responses:
        '200':
          description: User profile retrieved successfully
        '401':
          description: Unauthorized

    put:
      summary: Update user profile
      description: Endpoint to update the user's profile information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      responses:
        '200':
          description: User profile updated successfully
        '401':
          description: Unauthorized

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - username
        - email
        - password

    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email

    PasswordReset:
      type: object
      properties:
        password:
          type: string
          format: password
      required:
        - password

    UserProfileUpdate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
      required:
        - username
        - email
